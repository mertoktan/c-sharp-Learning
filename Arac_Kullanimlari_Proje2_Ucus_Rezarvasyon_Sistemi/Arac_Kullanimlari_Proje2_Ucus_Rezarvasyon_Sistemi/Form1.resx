<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GW51Jv3BMWDkndxxHikarHFKxtskWK4e2phkgfwkba/UeRHcVPasWjaWZgzWw5IyV9EUwnY2emjmyTsE
        0rcgkyOtGy/pEDjmOncq9ME1ievVr6ni1NRevPXyx1295eOGbByQOdJ0zHSBvqiWOysefpuF/SI5DrXy
        mmmJ3mUmp41XLEUiu1fX5x7NN+7mocS41TCSbkljrkniTquJ0lp6zKzX8QY6xtGOWPm2n+sx/du/NfPh
        J933+Icf7J+7fqdiah9NBS/KGWhe918jvSzHTnyBPmpLaeZpEbqmLi+Kmovm5J83zc/5tZ/rMf3bvzUc
        6Sd+65/EWP8AZP3dTBt3sUbg+eQzFpuGBuVnjfUqWmlrHWeqlquO5ckTXHHLE/dNAwAWAsALWtp5K0wt
        533lBMV3dB8hfBMI2uN+je0kNJ90g8OwqnfS7zvD0Om4/NKRXLXf5tRm7WW/pVLLdkbr+FyuY0c+6xb8
        R123inX6pfs/s3BQtPRgue72pXWLj2dg7ArWPFFGDq9fl1U73np7I1jGwlRU1Es5qGDpHkgFjvRbwaOP
        UAq+TTTe2+7W0nG8enxRjik9Pm0/m1n+sx/du/NcTo591n+I6fsn7pds1s+2kpjTuIeZC4yOAsH5tLWP
        K1grWLFFa8rC12utqM/ix09kbrt213Ewz5Wk6NewnL2BwKgtpd56NbB+IZrXbJXefkUW7axBmqLj3Y2W
        J+0bpXSR6yZvxDaY2x12+qQ4zs9nw+Whpi2DpWZM5BIANsxNtSSLi6u4tqTHR53UZb55m1p6yrj5mKn6
        7F9y/wDUtD46PZR+F+aRbObpqWne2WokNS5hBDMobFcaglupd3E27FBk1drRtHRJTTxXu6W8LY+fFBAy
        OdkLIC5xa5jjmcbBpFiLADN5rjBmjHvMw6y4+foho3NVP1yL7l/6lZ+Nj2Q/Cz7pdu+2E/Zb5ZZJGyyS
        NDGuawgMZxI1J1Jt5BV8+fxOybFi5HY22wOXEKR1LHK2LO9pc5zSbta7Naw7QFHivFLc0u8leauzW2B2
        VOFwPjc8SPllL3Pa0gWsA0WPVY+a6z5fEtu5xY+SNkpUKUQEBBiyAgWQZQYsgICAgWQEGUGEBBlAQYQZ
        QEGEBBlBiyDKAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD//Z
</value>
  </data>
</root>